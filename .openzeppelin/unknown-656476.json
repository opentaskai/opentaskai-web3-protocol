{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9b11F1ff7C6fEC4e4b2Fb3ff748980F4620A75c2",
    "txHash": "0xccd3ffb59d07ae1d481fe353bd3eddac74d5aa9538e646a8f5c43fb24a9e7894"
  },
  "proxies": [
    {
      "address": "0x9Aa6Ff7524C8bb7E78e9853713657FD678C8F3F7",
      "txHash": "0x5b3bc5163d5c35a7f2a3906e638eca1f0386814cf3f61a1bff638f564a432237",
      "kind": "transparent"
    },
    {
      "address": "0x3212257cAc8cf8eC690e232868f90681F2CDf7a3",
      "txHash": "0x0ef3cf4316cbc858b1124393932fc3ee64e408fa6c6ddc356345b4808454171f",
      "kind": "transparent"
    },
    {
      "address": "0xF58cD5dEAA238210d2cc1328Dd8eB27F5B2a30b2",
      "txHash": "0x8c2e1ca8b1f8476137e28bada53fa4aa0937aeabbb8ed429daeff6ff8c8fdb51",
      "kind": "transparent"
    },
    {
      "address": "0x50aBe05918b326788BceE63A6b6f8d18E2b2C096",
      "txHash": "0x32fa1b139a4c955a44db8c190fed295e32f28b6727467bc2466e4a09df547913",
      "kind": "transparent"
    },
    {
      "address": "0x7C35db8CD3A8EeC823b9556D0B71f6659EBfe7fB",
      "txHash": "0x959d7001070ddafacd4739a67314d6e2531a325ad4bac65163b37bb6e2d26dac",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e6403a185a2ee4eecd6bcac34f357653e1e52ff0cc9e44ed273c1031395f7bce": {
      "address": "0x55bB4dAF3568055AD386fbcDa86d6a407961fB73",
      "txHash": "0xc9146d9d01b930f092ee4ccbb4a150d42763fdd76d802161ca933a9f925544c5",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Configable",
            "label": "config",
            "type": "t_address",
            "src": "contracts/Configable.sol:10"
          },
          {
            "contract": "Configable",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/Configable.sol:11"
          },
          {
            "contract": "ReentrancyGuard",
            "label": "_status",
            "type": "t_uint256",
            "src": "contracts/ReentrancyGuard.sol:35"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "Payment",
            "label": "NONE",
            "type": "t_bytes32",
            "src": "contracts/Payment.sol:49"
          },
          {
            "contract": "Payment",
            "label": "id",
            "type": "t_uint256",
            "src": "contracts/Payment.sol:50"
          },
          {
            "contract": "Payment",
            "label": "domainHash",
            "type": "t_bytes32",
            "src": "contracts/Payment.sol:51"
          },
          {
            "contract": "Payment",
            "label": "enabled",
            "type": "t_bool",
            "src": "contracts/Payment.sol:53"
          },
          {
            "contract": "Payment",
            "label": "nosnEnabled",
            "type": "t_bool",
            "src": "contracts/Payment.sol:54"
          },
          {
            "contract": "Payment",
            "label": "signer",
            "type": "t_address",
            "src": "contracts/Payment.sol:55"
          },
          {
            "contract": "Payment",
            "label": "feeTo",
            "type": "t_address",
            "src": "contracts/Payment.sol:56"
          },
          {
            "contract": "Payment",
            "label": "feeToAccount",
            "type": "t_bytes32",
            "src": "contracts/Payment.sol:57"
          },
          {
            "contract": "Payment",
            "label": "records",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/Payment.sol:60"
          },
          {
            "contract": "Payment",
            "label": "autoBindEnabled",
            "type": "t_bool",
            "src": "contracts/Payment.sol:62"
          },
          {
            "contract": "Payment",
            "label": "maxWalletCount",
            "type": "t_uint256",
            "src": "contracts/Payment.sol:63"
          },
          {
            "contract": "Payment",
            "label": "walletToAccount",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/Payment.sol:64"
          },
          {
            "contract": "Payment",
            "label": "walletsOfAccount",
            "type": "t_mapping(t_bytes32,t_array(t_address)dyn_storage)",
            "src": "contracts/Payment.sol:65"
          },
          {
            "contract": "Payment",
            "label": "userAccounts",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Account)524_storage))",
            "src": "contracts/Payment.sol:68"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Account)524_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct Account))"
          },
          "t_mapping(t_address,t_struct(Account)524_storage)": {
            "label": "mapping(address => struct Account)"
          },
          "t_struct(Account)524_storage": {
            "label": "struct Account",
            "members": [
              {
                "label": "available",
                "type": "t_uint256"
              },
              {
                "label": "frozen",
                "type": "t_uint256"
              }
            ]
          }
        },
        "namespaces": {}
      }
    },
    "36195c07f0b80e6e708a6e03eda613d1099a116dc6beb05fe7e26b373ef22604": {
      "address": "0xbA27D2ff0eD0e3914C129606DE2f8cD25c659b5d",
      "txHash": "0xf197487ded6b8eec4837470a37c79f6f548ed6dd95b82283d688382dacab23b1",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "ERC721",
            "src": "contracts/ERC721/ERC721.sol:23"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "ERC721",
            "src": "contracts/ERC721/ERC721.sol:26"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721",
            "src": "contracts/ERC721/ERC721.sol:29"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721",
            "src": "contracts/ERC721/ERC721.sol:32"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721",
            "src": "contracts/ERC721/ERC721.sol:35"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721",
            "src": "contracts/ERC721/ERC721.sol:38"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721Enumerable",
            "src": "contracts/ERC721/extensions/ERC721Enumerable.sol:15"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721Enumerable",
            "src": "contracts/ERC721/extensions/ERC721Enumerable.sol:18"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721Enumerable",
            "src": "contracts/ERC721/extensions/ERC721Enumerable.sol:21"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721Enumerable",
            "src": "contracts/ERC721/extensions/ERC721Enumerable.sol:24"
          },
          {
            "label": "config",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "Configable",
            "src": "contracts/Configable.sol:10"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "Configable",
            "src": "contracts/Configable.sol:11"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "11",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "11",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "id",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "NFT",
            "src": "contracts/NFT.sol:12"
          },
          {
            "label": "maxTotalSupply",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "NFT",
            "src": "contracts/NFT.sol:13"
          },
          {
            "label": "base_uri",
            "offset": 0,
            "slot": "14",
            "type": "t_string_storage",
            "contract": "NFT",
            "src": "contracts/NFT.sol:14"
          },
          {
            "label": "suffix",
            "offset": 0,
            "slot": "15",
            "type": "t_string_storage",
            "contract": "NFT",
            "src": "contracts/NFT.sol:15"
          },
          {
            "label": "_domainHash",
            "offset": 0,
            "slot": "16",
            "type": "t_bytes32",
            "contract": "NFT",
            "src": "contracts/NFT.sol:16"
          },
          {
            "label": "signer",
            "offset": 0,
            "slot": "17",
            "type": "t_address",
            "contract": "NFT",
            "src": "contracts/NFT.sol:17"
          },
          {
            "label": "claimLimit",
            "offset": 0,
            "slot": "18",
            "type": "t_uint256",
            "contract": "NFT",
            "src": "contracts/NFT.sol:18"
          },
          {
            "label": "claimCount",
            "offset": 0,
            "slot": "19",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NFT",
            "src": "contracts/NFT.sol:19"
          },
          {
            "label": "records",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "NFT",
            "src": "contracts/NFT.sol:21"
          },
          {
            "label": "record2s",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "NFT",
            "src": "contracts/NFT.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "a177ad53c7aaa906bd3b39420d9c41eba250687685e6e7333b87e3450e85cc8b": {
      "address": "0x6DD2464E134AEa106dA8f468daC8A8125b384e5b",
      "txHash": "0x32b88b03f0356842dbcb2567a58e628a87b3553cadbdd4b919aa57d132f28971",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Configable",
            "label": "config",
            "type": "t_address",
            "src": "contracts/Configable.sol:10"
          },
          {
            "contract": "Configable",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/Configable.sol:11"
          },
          {
            "contract": "ReentrancyGuard",
            "label": "_status",
            "type": "t_uint256",
            "src": "contracts/ReentrancyGuard.sol:35"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "Payment",
            "label": "NONE",
            "type": "t_bytes32",
            "src": "contracts/Payment.sol:49"
          },
          {
            "contract": "Payment",
            "label": "id",
            "type": "t_uint256",
            "src": "contracts/Payment.sol:50"
          },
          {
            "contract": "Payment",
            "label": "domainHash",
            "type": "t_bytes32",
            "src": "contracts/Payment.sol:51"
          },
          {
            "contract": "Payment",
            "label": "enabled",
            "type": "t_bool",
            "src": "contracts/Payment.sol:53"
          },
          {
            "contract": "Payment",
            "label": "nosnEnabled",
            "type": "t_bool",
            "src": "contracts/Payment.sol:54"
          },
          {
            "contract": "Payment",
            "label": "signer",
            "type": "t_address",
            "src": "contracts/Payment.sol:55"
          },
          {
            "contract": "Payment",
            "label": "feeTo",
            "type": "t_address",
            "src": "contracts/Payment.sol:56"
          },
          {
            "contract": "Payment",
            "label": "feeToAccount",
            "type": "t_bytes32",
            "src": "contracts/Payment.sol:57"
          },
          {
            "contract": "Payment",
            "label": "records",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/Payment.sol:60"
          },
          {
            "contract": "Payment",
            "label": "autoBindEnabled",
            "type": "t_bool",
            "src": "contracts/Payment.sol:62"
          },
          {
            "contract": "Payment",
            "label": "maxWalletCount",
            "type": "t_uint256",
            "src": "contracts/Payment.sol:63"
          },
          {
            "contract": "Payment",
            "label": "walletToAccount",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/Payment.sol:64"
          },
          {
            "contract": "Payment",
            "label": "walletsOfAccount",
            "type": "t_mapping(t_bytes32,t_array(t_address)dyn_storage)",
            "src": "contracts/Payment.sol:65"
          },
          {
            "contract": "Payment",
            "label": "userAccounts",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Account)524_storage))",
            "src": "contracts/Payment.sol:68"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Account)524_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct Account))"
          },
          "t_mapping(t_address,t_struct(Account)524_storage)": {
            "label": "mapping(address => struct Account)"
          },
          "t_struct(Account)524_storage": {
            "label": "struct Account",
            "members": [
              {
                "label": "available",
                "type": "t_uint256"
              },
              {
                "label": "frozen",
                "type": "t_uint256"
              }
            ]
          }
        },
        "namespaces": {}
      }
    },
    "f313eea5b7bc6c922f7dcbc992c6226b76f7b2315b2fa54bad7cfda7e7669a4c": {
      "address": "0x249535a7593FCB5756CF9A739b73039E94243919",
      "txHash": "0x1fb085357f7ed076a373043fbc903138085f504c2f8cc9f8b4e82a264077494c",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "contract": "Configable",
            "label": "config",
            "type": "t_address",
            "src": "contracts/Configable.sol:10"
          },
          {
            "contract": "Configable",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/Configable.sol:11"
          },
          {
            "contract": "ReentrancyGuard",
            "label": "_status",
            "type": "t_uint256",
            "src": "contracts/ReentrancyGuard.sol:35"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "Payment",
            "label": "NONE",
            "type": "t_bytes32",
            "src": "contracts/Payment.sol:60"
          },
          {
            "contract": "Payment",
            "label": "id",
            "type": "t_uint256",
            "src": "contracts/Payment.sol:61"
          },
          {
            "contract": "Payment",
            "label": "domainHash",
            "type": "t_bytes32",
            "src": "contracts/Payment.sol:62"
          },
          {
            "contract": "Payment",
            "label": "enabled",
            "type": "t_bool",
            "src": "contracts/Payment.sol:64"
          },
          {
            "contract": "Payment",
            "label": "nosnEnabled",
            "type": "t_bool",
            "src": "contracts/Payment.sol:65"
          },
          {
            "contract": "Payment",
            "label": "signer",
            "type": "t_address",
            "src": "contracts/Payment.sol:66"
          },
          {
            "contract": "Payment",
            "label": "feeTo",
            "type": "t_address",
            "src": "contracts/Payment.sol:67"
          },
          {
            "contract": "Payment",
            "label": "feeToAccount",
            "type": "t_bytes32",
            "src": "contracts/Payment.sol:68"
          },
          {
            "contract": "Payment",
            "label": "records",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/Payment.sol:71"
          },
          {
            "contract": "Payment",
            "label": "autoBindEnabled",
            "type": "t_bool",
            "src": "contracts/Payment.sol:73"
          },
          {
            "contract": "Payment",
            "label": "maxWalletCount",
            "type": "t_uint256",
            "src": "contracts/Payment.sol:74"
          },
          {
            "contract": "Payment",
            "label": "walletToAccount",
            "type": "t_mapping(t_address,t_bytes32)",
            "src": "contracts/Payment.sol:75"
          },
          {
            "contract": "Payment",
            "label": "walletsOfAccount",
            "type": "t_mapping(t_bytes32,t_array(t_address)dyn_storage)",
            "src": "contracts/Payment.sol:76"
          },
          {
            "contract": "Payment",
            "label": "userAccounts",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Account)524_storage))",
            "src": "contracts/Payment.sol:79"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Account)524_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct Account))"
          },
          "t_mapping(t_address,t_struct(Account)524_storage)": {
            "label": "mapping(address => struct Account)"
          },
          "t_struct(Account)524_storage": {
            "label": "struct Account",
            "members": [
              {
                "label": "available",
                "type": "t_uint256"
              },
              {
                "label": "frozen",
                "type": "t_uint256"
              }
            ]
          }
        },
        "namespaces": {}
      }
    },
    "7a0ad8f4af38d6ccca1ace20c8f5b1a84b3edc0d575f6c63ef702587b5d18a90": {
      "address": "0x27DfEC9DE58aA3AA3b703Abc71c200b39f443364",
      "txHash": "0xa49c661a1f7f178358dda60cd51840c181e41d51e33ae778d799992cd772cca4",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "config",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "Configable",
            "src": "contracts/Configable.sol:10"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Configable",
            "src": "contracts/Configable.sol:11"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "1",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "1",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "enabled",
            "offset": 22,
            "slot": "1",
            "type": "t_bool",
            "contract": "RewardClaim",
            "src": "contracts/RewardClaim.sol:17"
          },
          {
            "label": "periods",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(Period)626_storage)",
            "contract": "RewardClaim",
            "src": "contracts/RewardClaim.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Period)626_storage)": {
            "label": "mapping(uint256 => struct RewardClaim.Period)",
            "numberOfBytes": "32"
          },
          "t_struct(Period)626_storage": {
            "label": "struct RewardClaim.Period",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "merkleRoot",
                "type": "t_mapping(t_uint256,t_bytes32)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "hasClaimed",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "0180e4f9ed18398496d0be43e6d909f021f5af33d60c89abdb4164db98649a0c": {
      "address": "0x96A75E22D29f71d158e96f6693aB58e444a36254",
      "txHash": "0xb9b434da12645d6747db838c7b3669c48f39099aa20029eed46aa57e9fbfd06e",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "config",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "Configable",
            "src": "contracts/Configable.sol:10"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Configable",
            "src": "contracts/Configable.sol:11"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "1",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "1",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "enabled",
            "offset": 22,
            "slot": "1",
            "type": "t_bool",
            "contract": "RewardClaim",
            "src": "contracts/RewardClaim.sol:26"
          },
          {
            "label": "periods",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(Period)630_storage)",
            "contract": "RewardClaim",
            "src": "contracts/RewardClaim.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Period)630_storage)": {
            "label": "mapping(uint256 => struct RewardClaim.Period)",
            "numberOfBytes": "32"
          },
          "t_struct(Period)630_storage": {
            "label": "struct RewardClaim.Period",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "userCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "merkleRoot",
                "type": "t_mapping(t_uint256,t_bytes32)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "hasClaimed",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "fb507b191678a7eab514bb7d59c5244857a64a35f1f619276bc32755b56843cf": {
      "address": "0x3858705aeCB29DcD597C40d17712f4E708396e84",
      "txHash": "0x0e7659f69fe934601b60ff1960243526aa8febc402fee6b0055d8821849d0f1e",
      "layout": {
        "solcVersion": "0.8.11",
        "storage": [
          {
            "label": "config",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "Configable",
            "src": "contracts/Configable.sol:10"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Configable",
            "src": "contracts/Configable.sol:11"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "1",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "1",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "enabled",
            "offset": 22,
            "slot": "1",
            "type": "t_bool",
            "contract": "RewardClaim",
            "src": "contracts/RewardClaim.sol:26"
          },
          {
            "label": "periods",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(Period)630_storage)",
            "contract": "RewardClaim",
            "src": "contracts/RewardClaim.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Period)630_storage)": {
            "label": "mapping(uint256 => struct RewardClaim.Period)",
            "numberOfBytes": "32"
          },
          "t_struct(Period)630_storage": {
            "label": "struct RewardClaim.Period",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "userCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "merkleRoot",
                "type": "t_mapping(t_uint256,t_bytes32)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "hasClaimed",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    }
  }
}
